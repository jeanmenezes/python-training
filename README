                               outline
                               =======

Author: Pedro Kröger <pedro.kroger@gmail.com>
Date: 2010-03-16 10:59:03 BRT


Table of Contents
=================
1 Objetivos 
2 Mar 17 
    2.1 vantagens python 
    2.2 desvantagens de python 
    2.3 introdução 
3 Mar 31 
    3.1 orientação a objetos 
4 Abr 14 
5 Abr 21 
6 Referências 


1 Objetivos 
~~~~~~~~~~~~
  Introdução rápida a python para quem já conhece alguma linguagem de
  programação. Poder ler e contribuior com o código de [xenophilus].

  [xenophilus]: http://github.com/kroger/xenophilus

2 Mar 17 
~~~~~~~~~

2.1 vantagens python 
=====================
   - curva de aprendizado pequena
   - onipresente
   - fácil de ler (especialmente 6 meses depois)
   - multi-paradigma
   - orientada a objetos
   - baterias incluídas (mostrar bibliotecas)
   - portável
   - flexível (não tanto como lisp)
   - excelente documentação
   - excelente comunidade
   - ditador benevolente
   - coisas padrão como pep8 (pep8.py rocks!)
   - cada versão está melhor (3.1 melhor que 1.5)
   - mais sintaxe que lisp, menos prolixo:
     lisp =>   (subseq "foo" 0 3)
     python => "foo"[:3]

2.2 desvantagens de python 
===========================
   - pode ser lento (mas pode re-escrever em C)
   - ditador benevolente
   - linguagem em fluxo (e.g. 1.5 diff de 3.1)
   - não tem macros como em lisp (nem loop, format, etc)
   - não tem slime (mas tem IDEs: eclipse, komodo, etc)
   - mais sintaxe que lisp (funções em lisp):
     lisp =>   (member item lista)
     python => item in lista

2.3 introdução 
===============
   - o interpretador
   - programa mínimo
   - o básico da sintaxe (identação, espaços, pep8, etc)
   - achando coisas na documentação
   - help() e dir()
   - criando scripts (shebang)
   - números, strings, listas, dicionários
   - tipos (tipagem forte, compare com perl)
   - funções (básico)
   - if
   - codigo em bibliotecas (import)
   - for, compreensão de listas, map, lambda
   - argumentos em funções
   - exemplo1.py

3 Mar 31 
~~~~~~~~~

3.1 orientação a objetos 
=========================

4 Abr 14 
~~~~~~~~~

5 Abr 21 
~~~~~~~~~

6 Referências 
~~~~~~~~~~~~~~
  - The Python Tutorial
    [http://docs.python.org/tutorial/index.html]
  - The Python Standard Library
    [http://docs.python.org/library/index.html]
  - The Python Language Reference
    [http://docs.python.org/reference/index.html]
  - Style Guide for Python Code
    [http://www.python.org/dev/peps/pep-0008/]
  - Python tutorials
    [http://wiki.python.org/moin/BeginnersGuide/Programmers]
    [http://wiki.python.org/moin/BeginnersGuide/NonProgrammers]
  - How to Think Like a Computer Scientist
    [http://openbookproject.net//thinkCSpy/]
  - Dive Into Python
    [http://diveintopython.org/]
  - Python Essential Reference [livro]
    [http://kroger.genos.mus.br/docs/Python.Essential.Reference.4th.pdf]
  - Learning Python [livro]
    [http://kroger.genos.mus.br/docs/Learning\_Python\_Fourth\_Edition.pdf]

    [http://kroger.genos.mus.br/docs/Learning\_Python\_Fourth\_Edition.pdf]: http://kroger.genos.mus.br/docs/Learning_Python_Fourth_Edition.pdf

